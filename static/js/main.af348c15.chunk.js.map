{"version":3,"sources":["firebase.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","App","searchDb","state","title","length","results","filter","show","toLowerCase","includes","map","result","i","Card","className","CardContent","Typography","component","variant","service","renderShowcase","Grid","item","xs","justify","alignItems","GridList","id","cellheight","cols","CardMedia","src","image","showcase","handleChange","bind","changeTitle","e","this","setState","target","value","database","ref","on","snapshot","items","val","newState","push","console","log","container","style","backgroundColor","sm","color","AppBar","position","Toolbar","InputBase","placeholder","onChange","paddingTop","direction","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.af348c15.chunk.js","sourcesContent":["import firebase from 'firebase'\r\nconst config = {\r\n  apiKey: \"AIzaSyDgPK0ARQ02qV0brhgg66_wZ6bKwHEFRJk\",\r\n  authDomain: \"dubbed-fbf70.firebaseapp.com\",\r\n  databaseURL: \"https://dubbed-fbf70-default-rtdb.firebaseio.com\",\r\n  projectId: \"dubbed-fbf70\",\r\n  storageBucket: \"dubbed-fbf70.appspot.com\",\r\n  messagingSenderId: \"825831847025\",\r\n  appId: \"1:825831847025:web:dc8eb5adc1986fbbe1d7d0\",\r\n  measurementId: \"G-Z398MG7TQ4\"\r\n};\r\nfirebase.initializeApp(config);\r\nexport default firebase;\r\n","import React, {Component} from 'react'\n\nimport './App.css';\nimport {Grid,AppBar, Toolbar, Typography, InputBase,GridList, Card, CardContent,CardMedia} from '@material-ui/core/';\nimport firebase from './firebase.js'\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state={\n      title:'',\n      results:[],\n      showcase: true\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.changeTitle = this.changeTitle.bind(this);\n    this.searchDb = this.searchDb.bind(this);\n    this.renderShowcase = this.renderShowcase.bind(this)\n  }\n  handleChange(e){\n    this.setState({\n      title:e.target.value\n    })\n    if(e.target.value.length <2){\n      this.setState({\n        showcase:true\n      })\n    }\n    else{\n      this.setState({\n        showcase:false\n      })\n    }\n\n  }\n  changeTitle(){\n    return (this.state.title)\n  }\n  componentDidMount(){\n    const shows = firebase.database().ref('shows')\n    shows.on(\"value\", (snapshot)=>{\n      let items = snapshot.val()\n      let newState=[]\n      for (let item in items){\n        newState.push({\n          title: items[item].title\n        })\n      }\n      this.setState({\n        results: newState\n      })\n\n    })\n    console.log(this.state.results)\n  }\n  searchDb = () => {\n\n    if(this.state.title.length > 1){\n\n       let items = this.state.results.filter(show => show.title.toLowerCase().includes(this.state.title)).map((result, i) =>\n\n            <Card key={i} className=\"root\">\n\n              <div className=\"details\">\n                <CardContent className=\"content\">\n                <Typography component=\"h5\" variant=\"h5\">\n                {result.title}\n                </Typography>\n                <Typography>\n                  {result.service}\n                </Typography>\n                </CardContent>\n              </div>\n            </Card>\n\n      )\n\n      return items\n    }\n\n\n  }\n\n  renderShowcase = () =>{\n\n      return(\n          <Grid item xs={6} justify=\"center\" alignItems=\"center\" >\n         <GridList id=\"showcase2\"cellheight={160} cols={1}>\n\n          <Card>\n            <CardContent>\n              <Typography>\n                Attack on Titan\n              </Typography>\n              <CardMedia\n                src={\"https://cdn.myanimelist.net/images/anime/10/47347.jpg\"}/>\n            </CardContent>\n          </Card>\n          <Card>\n            <CardContent>\n              <Typography>\n                Attack on Titan\n              </Typography>\n            </CardContent>\n          </Card>\n        </GridList>\n        <GridList id=\"showcase\"cellheight={160} cols={2}>\n\n         <Card>\n           <CardContent>\n             <Typography>\n               Attack on Titan\n             </Typography>\n             <CardMedia\n              image=\"./attack.jpg\"\n               />\n               </CardContent>\n\n         </Card>\n         <Card>\n           <CardContent>\n             <Typography>\n               Attack on Titan\n             </Typography>\n           </CardContent>\n         </Card>\n       </GridList>\n        </Grid>\n      )\n\n\n  }\n\n  render(){\n\n  return (\n    /*\n      Get App to full colo\n    */\n\n    <Grid container style={{backgroundColor:\"#393e46\"}}>\n    <Grid container  style={{backgroundColor:\"#222831\"}}>\n      <Grid item xs={12} sm={3} >\n        <Typography variant=\"h6\" style={{color:\"#ffd369\"}}>\n          Dubbed Anime Search Engine\n        </Typography>\n      </Grid>\n      <Grid item xs={12} sm={6}>  <AppBar style={{backgroundColor:\"#393e46\"}} position=\"static\">\n          <Toolbar>\n          <InputBase\n          placeholder=\"Search...\"\n          onChange={this.handleChange}\n          value={this.state.title}\n          />\n\n          </Toolbar>\n        </AppBar></Grid>\n      <Grid item xs={0} sm={6}></Grid>\n    </Grid >\n      <Grid id=\"default-display\" container justify=\"center\" alignItems=\"center\" style={{paddingTop:\"100px\"}} direction=\"column\">\n\n        <Grid item xs={6} justify=\"center\" alignItems=\"center\" >\n          {this.state.showcase ? this.renderShowcase(): null}\n          <GridList id=\"showcase\"cellheight={160} cols={2}>\n\n           {this.searchDb()}\n         </GridList>\n          <GridList id=\"showcase2\"cellheight={160} cols={1}>\n              {this.searchDb()}\n          </GridList>\n        </Grid>\n\n      </Grid>\n    </Grid>\n\n\n  );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline/>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}